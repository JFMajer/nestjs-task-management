#############################################################
# Specifies when workflow will run
#############################################################
name: Build, scan and push OCI image

on:
    workflow_dispatch:
    push:
      branches:
        - main
      paths-ignore:
        - 'infra/**'
        - '.github/workflows/deploy-infra.yml'
    pull_request:
      types: [opened, synchronize, reopened]
  

#############################################################
# Specifies jobs to run
#############################################################

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    environment: dev
    env:
      APP_NAME: ${{ vars.APP_NAME}}
    steps:
      - name: Set image tag
        run: |
          echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
      - name: Output image name
        run: |
          echo "${{ env.APP_NAME }}:$SHORT_SHA"
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Code Vulnerability Check
        uses: anchore/scan-action@v3
        id: scan-build
        with:  
          path: "${{ github.workspace }}"
          fail-build: true
          severity-cutoff: "high"
      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan-build.outputs.sarif }}
      - name: Build OCI Image with Buildpacks
        uses: mamezou-tech/buildpacks-action@master
        with:
          builder: gcr.io/buildpacks/builder:latest
          image: ${{ env.APP_NAME }}
          tag: $SHORT_SHA
      - name: List Docker Images
        run: docker image ls
      - name: Run Trivy Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.APP_NAME }}:${{ env.SHORT_SHA }}"
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
      - name: Upload Trivy scan SARIF report
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trivy-results.sarif
      - name: Login to GH Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Push to GH Registry
        run: |
          DOCKER_USERNAME="$(echo ${{ github.actor }} | tr '[:upper:]' '[:lower:]')"
          echo "DOCKER_IMAGE=ghcr.io/$DOCKER_USERNAME/${{ env.APP_NAME }}:${{ env.SHORT_SHA }}" >> $GITHUB_ENV
          docker tag ${{ env.APP_NAME }}:${{ env.SHORT_SHA }} $DOCKER_IMAGE
          docker image ls
          docker push $DOCKER_IMAGE
      - name: Add image to helm values
        run : | 
          sed -i "s#image:.*#image: $DOCKER_IMAGE#" helm/task-management/values.yaml
          cat helm/task-management/values.yaml
      - name: Upload values.yaml
        uses: actions/upload-artifact@v3
        with:
          name: values.yaml
          path: helm/task-management/values.yaml
          retention-days: 2
